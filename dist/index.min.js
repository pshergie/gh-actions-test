(()=>{var __webpack_modules__={699:function(module,__unused_webpack_exports,__nccwpck_require__){module=__nccwpck_require__.nmd(module),function(require,exports,module,platform){module?module.exports=minimatch:exports.minimatch=minimatch,require=require||function(id){switch(id){case"sigmund":return function(obj){return JSON.stringify(obj)};case"path":return{basename:function(f){return(f=f.split(/[\/\\]/)).pop()||f.pop()}};case"lru-cache":return function(){var cache={},cnt=0;this.set=function(k,v){(cache=100<=++cnt?{}:cache)[k]=v},this.get=function(k){return cache[k]}}}},minimatch.Minimatch=Minimatch;var module=require("lru-cache"),GLOBSTAR=(minimatch.cache=new module({max:100}),minimatch.GLOBSTAR=Minimatch.GLOBSTAR={}),sigmund=require("sigmund"),path=require("path"),reSpecials="().*{}+?[]^$\\!".split("").reduce(function(set,c){return set[c]=!0,set},{});var slashSplit=/\/+/;function ext(a,b){a=a||{},b=b||{};var t={};return Object.keys(b).forEach(function(k){t[k]=b[k]}),Object.keys(a).forEach(function(k){t[k]=a[k]}),t}function minimatch(p,pattern,options){if("string"!=typeof pattern)throw new TypeError("glob pattern string required");return!(!(options=options||{}).nocomment&&"#"===pattern.charAt(0))&&(""===pattern.trim()?""===p:new Minimatch(pattern,options).match(p))}function Minimatch(pattern,options){if(!(this instanceof Minimatch))return new Minimatch(pattern,options);if("string"!=typeof pattern)throw new TypeError("glob pattern string required");options=options||{},pattern=pattern.trim();var cacheKey=(pattern="win32"===platform?pattern.split("\\").join("/"):pattern)+"\n"+sigmund(options),cached=minimatch.cache.get(cacheKey);if(cached)return cached;minimatch.cache.set(cacheKey,this),this.options=options,this.set=[],this.pattern=pattern,this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.make()}function braceExpand(pattern,options){if(options=options||this.options,void 0===(pattern=void 0===pattern?this.pattern:pattern))throw new Error("undefined pattern");if(options.nobrace||!pattern.match(/\{.*\}/))return[pattern];var escaping=!1;if("{"!==pattern.charAt(0)){this.debug(pattern);for(var prefix=null,i=0,l=pattern.length;i<l;i++){var c=pattern.charAt(i);if(this.debug(i,c),"\\"===c)escaping=!escaping;else if("{"===c&&!escaping){prefix=pattern.substr(0,i);break}}return null===prefix?(this.debug("no sets"),[pattern]):braceExpand.call(this,pattern.substr(i),options).map(function(t){return prefix+t})}var numset=pattern.match(/^\{(-?[0-9]+)\.\.(-?[0-9]+)\}/);if(numset){this.debug("numset",numset[1],numset[2]);for(var suf=braceExpand.call(this,pattern.substr(numset[0].length),options),start=+numset[1],end=+numset[2],inc=end<start?-1:1,set=[],i=start;i!=end+inc;i+=inc)for(var ii=0,ll=suf.length;ii<ll;ii++)set.push(i+suf[ii]);return set}var i=1,depth=1,set=[],member="",escaping=!1;function addMember(){set.push(member),member=""}this.debug("Entering for");FOR:for(i=1,l=pattern.length;i<l;i++){c=pattern.charAt(i);if(this.debug("",i,c),escaping)escaping=!1,member+="\\"+c;else switch(c){case"\\":escaping=!0;continue;case"{":depth++,member+="{";continue;case"}":if(0===--depth){addMember(),i++;break FOR}member+=c;continue;case",":1===depth?addMember():member+=c;continue;default:member+=c;continue}}if(0!==depth)return this.debug("didn't close",pattern),braceExpand.call(this,"\\"+pattern,options);this.debug("set",set),this.debug("suffix",pattern.substr(i));for(var suf=braceExpand.call(this,pattern.substr(i),options),numset=1===set.length,ret=(this.debug("set pre-expanded",set),set=set.map(function(p){return braceExpand.call(this,p,options)},this),this.debug("set expanded",set),set=set.reduce(function(l,r){return l.concat(r)}),[]),i=0,l=(set=numset?set.map(function(s){return"{"+s+"}"}):set).length;i<l;i++)for(ii=0,ll=suf.length;ii<ll;ii++)ret.push(set[i]+suf[ii]);return ret}minimatch.filter=function(pattern,options){return options=options||{},function(p,i,list){return minimatch(p,pattern,options)}},minimatch.defaults=function(def){var orig,m;return def&&Object.keys(def).length?(orig=minimatch,(m=function(p,pattern,options){return orig.minimatch(p,pattern,ext(def,options))}).Minimatch=function(pattern,options){return new orig.Minimatch(pattern,ext(def,options))},m):minimatch},Minimatch.defaults=function(def){return def&&Object.keys(def).length?minimatch.defaults(def).Minimatch:Minimatch},Minimatch.prototype.debug=function(){},Minimatch.prototype.make=function(){var options,pattern;this._made||(pattern=this.pattern,(options=this.options).nocomment||"#"!==pattern.charAt(0)?pattern?(this.parseNegate(),pattern=this.globSet=this.braceExpand(),options.debug&&(this.debug=console.error),this.debug(this.pattern,pattern),pattern=this.globParts=pattern.map(function(s){return s.split(slashSplit)}),this.debug(this.pattern,pattern),pattern=pattern.map(function(s,si,set){return s.map(this.parse,this)},this),this.debug(this.pattern,pattern),pattern=pattern.filter(function(s){return-1===s.indexOf(!1)}),this.debug(this.pattern,pattern),this.set=pattern):this.empty=!0:this.comment=!0)},Minimatch.prototype.parseNegate=function(){var pattern=this.pattern,negate=!1,options=this.options,negateOffset=0;if(!options.nonegate){for(var i=0,l=pattern.length;i<l&&"!"===pattern.charAt(i);i++)negate=!negate,negateOffset++;negateOffset&&(this.pattern=pattern.substr(negateOffset)),this.negate=negate}},minimatch.braceExpand=function(pattern,options){return new Minimatch(pattern,options).braceExpand()},Minimatch.prototype.braceExpand=braceExpand,Minimatch.prototype.parse=function(pattern,isSub){var options=this.options;if(!options.noglobstar&&"**"===pattern)return GLOBSTAR;if(""===pattern)return"";var plType,stateChar,re="",hasMagic=!!options.nocase,escaping=!1,patternListStack=[],inClass=!1,reClassStart=-1,classStart=-1,patternStart="."===pattern.charAt(0)?"":options.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)",self=this;function clearStateChar(){if(stateChar){switch(stateChar){case"*":re+="[^/]*?",hasMagic=!0;break;case"?":re+="[^/]",hasMagic=!0;break;default:re+="\\"+stateChar}self.debug("clearStateChar %j %j",stateChar,re),stateChar=!1}}for(var c,pl,i=0,len=pattern.length;i<len&&(c=pattern.charAt(i));i++)if(this.debug("%s\t%s %s %j",pattern,i,re,c),escaping&&reSpecials[c])re+="\\"+c,escaping=!1;else switch(c){case"/":return!1;case"\\":clearStateChar(),escaping=!0;continue;case"?":case"*":case"+":case"@":case"!":if(this.debug("%s\t%s %s %j <-- stateChar",pattern,i,re,c),inClass){this.debug("  in class"),re+=c="!"===c&&i===classStart+1?"^":c;continue}self.debug("call clearStateChar %j",stateChar),clearStateChar(),stateChar=c,options.noext&&clearStateChar();continue;case"(":if(inClass){re+="(";continue}if(!stateChar){re+="\\(";continue}plType=stateChar,patternListStack.push({type:plType,start:i-1,reStart:re.length}),re+="!"===stateChar?"(?:(?!":"(?:",this.debug("plType %j %j",stateChar,re),stateChar=!1;continue;case")":if(inClass||!patternListStack.length){re+="\\)";continue}switch(clearStateChar(),hasMagic=!0,re+=")",plType=patternListStack.pop().type){case"!":re+="[^/]*?)";break;case"?":case"+":case"*":re+=plType}continue;case"|":if(inClass||!patternListStack.length||escaping){re+="\\|",escaping=!1;continue}clearStateChar(),re+="|";continue;case"[":if(clearStateChar(),inClass){re+="\\"+c;continue}inClass=!0,classStart=i,reClassStart=re.length,re+=c;continue;case"]":if(i===classStart+1||!inClass){re+="\\"+c,escaping=!1;continue}inClass=!(hasMagic=!0),re+=c;continue;default:clearStateChar(),escaping?escaping=!1:!reSpecials[c]||"^"===c&&inClass||(re+="\\"),re+=c}inClass&&(cs=pattern.substr(classStart+1),cs=this.parse(cs,SUBPARSE),re=re.substr(0,reClassStart)+"\\["+cs[0],hasMagic=hasMagic||cs[1]);for(;pl=patternListStack.pop();){var tail=re.slice(pl.reStart+3),t=(tail=tail.replace(/((?:\\{2})*)(\\?)\|/g,function(_,$1,$2){return $1+$1+($2=$2||"\\")+"|"}),this.debug("tail=%j\n   %s",tail,tail),"*"===pl.type?"[^/]*?":"?"===pl.type?"[^/]":"\\"+pl.type);hasMagic=!0,re=re.slice(0,pl.reStart)+t+"\\("+tail}clearStateChar(),escaping&&(re+="\\\\");var cs,addPatternStart=!1;switch(re.charAt(0)){case".":case"[":case"(":addPatternStart=!0}""!==re&&hasMagic&&(re="(?=.)"+re);addPatternStart&&(re=patternStart+re);return isSub!==SUBPARSE?hasMagic?(cs=options.nocase?"i":"",(patternStart=new RegExp("^"+re+"$",cs))._glob=pattern,patternStart._src=re,patternStart):pattern.replace(/\\(.)/g,"$1"):[re,hasMagic]};var SUBPARSE={};minimatch.makeRe=function(pattern,options){return new Minimatch(pattern,options||{}).makeRe()},Minimatch.prototype.makeRe=function(){if(this.regexp||!1===this.regexp)return this.regexp;var set=this.set;if(!set.length)return this.regexp=!1;var options=this.options,twoStar=options.noglobstar?"[^/]*?":options.dot?"(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?":"(?:(?!(?:\\/|^)\\.).)*?",options=options.nocase?"i":"",set=set.map(function(pattern){return pattern.map(function(p){return p===GLOBSTAR?twoStar:"string"==typeof p?p.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"):p._src}).join("\\/")}).join("|");set="^(?:"+set+")$",this.negate&&(set="^(?!"+set+").*$");try{return this.regexp=new RegExp(set,options)}catch(ex){return this.regexp=!1}},minimatch.match=function(list,pattern,options){var mm=new Minimatch(pattern,options);return list=list.filter(function(f){return mm.match(f)}),options.nonull&&!list.length&&list.push(pattern),list},Minimatch.prototype.match=function(f,partial){if(this.debug("match",f,this.pattern),this.comment)return!1;if(this.empty)return""===f;if("/"===f&&partial)return!0;var options=this.options;"win32"===platform&&(f=f.split("\\").join("/"));f=f.split(slashSplit),this.debug(this.pattern,"split",f);for(var set=this.set,splitFile=(this.debug(this.pattern,"set",set),path.basename(f.join("/")).split("/")),i=0,l=set.length;i<l;i++){var pattern=set[i],file=f;if(options.matchBase&&1===pattern.length&&(file=splitFile),this.matchOne(file,pattern,partial))return!!options.flipNegate||!this.negate}return!options.flipNegate&&this.negate},Minimatch.prototype.matchOne=function(file,pattern,partial){var options=this.options;this.debug("matchOne",{this:this,file:file,pattern:pattern}),this.debug("matchOne",file.length,pattern.length);for(var fi=0,pi=0,fl=file.length,pl=pattern.length;fi<fl&&pi<pl;fi++,pi++){this.debug("matchOne loop");var hit,p=pattern[pi],f=file[fi];if(this.debug(pattern,p,f),!1===p)return!1;if(p===GLOBSTAR){this.debug("GLOBSTAR",[pattern,p,f]);var fr=fi,pr=pi+1;if(pr===pl){for(this.debug("** at the end");fi<fl;fi++)if("."===file[fi]||".."===file[fi]||!options.dot&&"."===file[fi].charAt(0))return!1;return!0}for(;fr<fl;){var swallowee=file[fr];if(this.debug("\nglobstar while",file,fr,pattern,pr,swallowee),this.matchOne(file.slice(fr),pattern.slice(pr),partial))return this.debug("globstar found match!",fr,fl,swallowee),!0;if("."===swallowee||".."===swallowee||!options.dot&&"."===swallowee.charAt(0)){this.debug("dot detected!",file,fr,pattern,pr);break}this.debug("globstar swallow a segment, and continue"),fr++}return partial&&(this.debug("\n>>> no match, partial?",file,fr,pattern,pr),fr===fl)?!0:!1}if("string"==typeof p?(hit=options.nocase?f.toLowerCase()===p.toLowerCase():f===p,this.debug("string match",p,f,hit)):(hit=f.match(p),this.debug("pattern match",p,f,hit)),!hit)return!1}if(fi===fl&&pi===pl)return!0;if(fi===fl)return partial;if(pi===pl)return fi===fl-1&&""===file[fi];throw new Error("wtf?")}}(require,this,module,"object"==typeof process?process.platform:"win32")},521:module=>{module.exports=eval("require")("@actions/core")},755:module=>{module.exports=eval("require")("@actions/github")},688:module=>{module.exports=eval("require")("js-yaml")},147:module=>{"use strict";module.exports=require("fs")}},__webpack_module_cache__={};function __nccwpck_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var cachedModule=__webpack_module_cache__[moduleId]={id:moduleId,loaded:!1,exports:{}},threw=!0;try{__webpack_modules__[moduleId].call(cachedModule.exports,cachedModule,cachedModule.exports,__nccwpck_require__),threw=!1}finally{threw&&delete __webpack_module_cache__[moduleId]}return cachedModule.loaded=!0,cachedModule.exports}__nccwpck_require__.nmd=module=>(module.paths=[],module.children||(module.children=[]),module),void 0!==__nccwpck_require__&&(__nccwpck_require__.ab=__dirname+"/");var __webpack_exports__={};(()=>{const core=__nccwpck_require__(521),github=__nccwpck_require__(755),minimatch=__nccwpck_require__(699)["minimatch"],yaml=__nccwpck_require__(688),fs=__nccwpck_require__(147),checkDiff=(paths,diffFilesPaths)=>{if(Array.isArray(paths))return paths.some(path=>diffFilesPaths.some(diffPath=>diffPath.includes(path)||minimatch(diffPath,path)));throw new Error(`Wrong type for 'paths' variable (${typeof paths}). Make sure you followed the formatting rules.`)};!async function(){try{var config=yaml.safeLoad(fs.readFileSync("docs/checklists-data.yml","utf8")),indentedJson=JSON.stringify(config,null,4),settings=(console.log("indentedJson",indentedJson),(markdown=>{const data=[];return markdown.split("\n").map(line=>{line.startsWith("paths:")?data.push({paths:line.split("paths: ")[1].split(",")}):line.startsWith("message:")?data[data.length-1].message=line.split("message: ")[1]:data[data.length-1].message+=`
`+line}),data})(core.getInput("settings"))),token=core.getInput("token");const octokit=github.getOctokit(token),context=github.context,pullNumber=context.payload.pull_request.number,comments=await(async(context,pullNumber,octokit)=>{let data=[],pagesRemaining=!0,page=1;for(;pagesRemaining;){var response=await octokit.rest.issues.listComments({...context.repo,issue_number:pullNumber,per_page:100,page:page}),response=(data=[...data,...response.data],response.headers.link);pagesRemaining=response&&response.includes('rel="next"'),page++}return data})(context,pullNumber,octokit),diffFilesPaths=await(async(context,pullNumber,octokit)=>{let data=[],pagesRemaining=!0,page=1;for(;pagesRemaining;){var response=await octokit.rest.pulls.listFiles({...context.repo,pull_number:pullNumber,per_page:100,page:page}),parsedData=response.data.map(diff=>diff.filename),parsedData=(data=[...data,...parsedData],response.headers.link);pagesRemaining=parsedData&&parsedData.includes('rel="next"'),page++}return data})(context,pullNumber,octokit);settings.map(async({paths,message})=>(async(paths,message,pullNumber,diffFilesPaths,comments,context,octokit)=>{checkDiff(paths,diffFilesPaths)&&!comments.some(comment=>"github-actions[bot]"===comment.user.login&&comment.body===message)&&await octokit.rest.issues.createComment({...context.repo,issue_number:pullNumber,body:message})})(paths,message,pullNumber,diffFilesPaths,comments,context,octokit))}catch(error){core.setFailed(error.message)}}()})(),module.exports=__webpack_exports__})();